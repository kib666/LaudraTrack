// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
} 

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  phoneNumber String   @unique
  password String
  role     Role     @default(CUSTOMER)
  jobs     LaundryJob[]
  orders   Order[]
  appointments Appointment[]
}

model LaundryJob {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  customerId        String   @db.ObjectId
  customer          User     @relation(fields: [customerId], references: [id])
  weight            Float
  status            JobStatus
  estimatedDelivery DateTime
  createdAt         DateTime @default(now())
}

model Order {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  weight          Float
  status          String
  service         String
  deliveryAddress String?
  eta             DateTime?
  total           Float
  notes           String?
  createdAt       DateTime  @default(now())
  userId          String?   @db.ObjectId
  user            User?     @relation(fields: [userId], references: [id])
}

model Appointment {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  customer        String
  phone           String
  date            DateTime
  service         String
  notes           String?
  status          String
  rejectionReason String?
  createdAt       DateTime @default(now())
  userId          String?  @db.ObjectId
  user            User?    @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  STAFF
  CUSTOMER
}

enum JobStatus {
  PENDING
  IN_WASH
  DELIVERED
}
